var g_data = {"16":{"pr":"/tb_top","t":"inst","br":[{"bs":[{"s":"        if ($value$plusargs(\"ram_init_file=%s\", ram_init_file)) begin","f":14,"i":1,"l":54,"h":1},{"s":"All False","f":14,"i":1,"l":54,"h":0}],"br":{"s":"        if ($value$plusargs(\"ram_init_file=%s\", ram_init_file)) begin","f":14,"l":54,"i":1,"p":50.00}},{"bs":[{"s":"        if ($value$plusargs(\"trace_log=%s\", trace_log)) begin","f":14,"i":1,"l":59,"h":1},{"s":"        end else begin","f":14,"i":1,"l":62,"h":0}],"br":{"s":"        if ($value$plusargs(\"trace_log=%s\", trace_log)) begin","f":14,"l":59,"i":1,"p":50.00}},{"bs":[{"s":"        if (!rst) begin","f":14,"i":1,"l":104,"h":1},{"s":"All False","f":14,"i":1,"l":104,"h":1}],"br":{"s":"        if (!rst) begin","f":14,"l":104,"i":1,"p":100.00}},{"bs":[{"s":"            if (reg_write_o) begin","f":14,"i":1,"l":105,"h":1},{"s":"            end else begin","f":14,"i":1,"l":110,"h":1}],"br":{"s":"            if (reg_write_o) begin","f":14,"l":105,"i":1,"p":100.00}},{"bs":[{"s":"        if (!rst && instruction == 32'h00000073) begin","f":14,"i":1,"l":121,"h":0},{"s":"All False","f":14,"i":1,"l":121,"h":1}],"br":{"s":"        if (!rst && instruction == 32'h00000073) begin","f":14,"l":121,"i":1,"p":50.00}}]},"18":{"pr":"/tb_top/dut/formal_if_inst","t":"inst","br":[{"bs":[{"s":"    ) else `uvm_error(\"PC_ALIGN_FAIL\", \"Program Counter is not 4-byte aligned\");","f":27,"i":1,"l":21,"h":0},{"s":"All False","f":27,"i":1,"l":21,"h":0}],"br":{"s":"    ) else `uvm_error(\"PC_ALIGN_FAIL\", \"Program Counter is not 4-byte aligned\");","f":27,"l":21,"i":1,"p":0.00}}]},"19":{"pr":"/tb_top/dut/processor_inst","t":"inst","br":[{"bs":[{"s":"        if (alu_src1_is_pc) begin","f":18,"i":1,"l":119,"h":1},{"s":"        end else if (alu_src1_is_zero) begin","f":18,"i":1,"l":121,"h":1},{"s":"        end else begin","f":18,"i":1,"l":123,"h":1}],"br":{"s":"        if (alu_src1_is_pc) begin","f":18,"l":119,"i":1,"p":100.00}},{"bs":[{"s":"            2'b00:  to_REG_WRITE_DATA = from_ALU;           // Result from ALU","f":18,"i":1,"l":132,"h":1},{"s":"            2'b01:  to_REG_WRITE_DATA = mem_read_data;      // Data from memory","f":18,"i":1,"l":133,"h":0},{"s":"            2'b10:  to_REG_WRITE_DATA = from_increment_adder; // PC+4 for JAL/JALR","f":18,"i":1,"l":134,"h":1},{"s":"            2'b11:  to_REG_WRITE_DATA = csr_read ? csr_read_data : IMM_value; // CSR data or Immediate","f":18,"i":1,"l":135,"h":1},{"s":"            default: to_REG_WRITE_DATA = 32'hdeadbeef;     // Should not happen","f":18,"i":1,"l":136,"h":1}],"br":{"s":"        case (writeback_src)","f":18,"l":131,"i":1,"p":80.00}},{"bs":[{"s":"            2'b11:  to_REG_WRITE_DATA = csr_read ? csr_read_data : IMM_value; // CSR data or Immediate","t":49,"n":1,"f":18,"i":2,"l":135,"h":1},{"s":"            2'b11:  to_REG_WRITE_DATA = csr_read ? csr_read_data : IMM_value; // CSR data or Immediate","t":65,"n":1,"f":18,"i":3,"l":135,"h":1}],"br":{"s":"            2'b11:  to_REG_WRITE_DATA = csr_read ? csr_read_data : IMM_value; // CSR data or Immediate","f":18,"l":135,"i":2,"p":100.00}}]},"20":{"pr":"/tb_top/dut/processor_inst/CPU_control","t":"inst","br":[{"bs":[{"s":"assign jalr_select = (opcode == 7'b1100111) ? 1:0;","f":19,"i":1,"l":26,"h":1},{"s":"assign jalr_select = (opcode == 7'b1100111) ? 1:0;","t":47,"n":1,"f":19,"i":2,"l":26,"h":1}],"br":{"s":"assign jalr_select = (opcode == 7'b1100111) ? 1:0;","f":19,"l":26,"i":1,"p":100.00}},{"bs":[{"s":"assign jump = (opcode == 7'b1101111 || opcode == 7'b1100111) ? 1:0;","f":19,"i":1,"l":27,"h":1},{"s":"assign jump = (opcode == 7'b1101111 || opcode == 7'b1100111) ? 1:0;","t":64,"n":1,"f":19,"i":2,"l":27,"h":1}],"br":{"s":"assign jump = (opcode == 7'b1101111 || opcode == 7'b1100111) ? 1:0;","f":19,"l":27,"i":1,"p":100.00}},{"bs":[{"s":"assign branch = (opcode == 7'b1100011) ? 1:0;","f":19,"i":1,"l":28,"h":1},{"s":"assign branch = (opcode == 7'b1100011) ? 1:0;","t":42,"n":1,"f":19,"i":2,"l":28,"h":1}],"br":{"s":"assign branch = (opcode == 7'b1100011) ? 1:0;","f":19,"l":28,"i":1,"p":100.00}},{"bs":[{"s":"assign mem_read = (opcode == 7'b0000011)? 1:0;","f":19,"i":1,"l":29,"h":0},{"s":"assign mem_read = (opcode == 7'b0000011)? 1:0;","t":43,"n":1,"f":19,"i":2,"l":29,"h":1}],"br":{"s":"assign mem_read = (opcode == 7'b0000011)? 1:0;","f":19,"l":29,"i":1,"p":50.00}},{"bs":[{"s":"        7'b0000011: writeback_src = 2'b01; // LW","f":19,"i":1,"l":35,"h":0},{"s":"        7'b1101111: writeback_src = 2'b10; // JAL","f":19,"i":1,"l":36,"h":0},{"s":"        7'b1100111: writeback_src = 2'b10; // JALR","f":19,"i":1,"l":37,"h":1},{"s":"        7'b1110011: writeback_src = 2'b11; // SYSTEM/CSR","f":19,"i":1,"l":38,"h":1},{"s":"        default:    writeback_src = 2'b00; // R-type, I-type, LUI, AUIPC","f":19,"i":1,"l":39,"h":1}],"br":{"s":"    case (opcode)","f":19,"l":34,"i":1,"p":60.00}},{"bs":[{"s":"assign ALU_op = (opcode == 7'b0110011 || opcode == 7'b0010011) ? 2'b10 :","f":19,"i":1,"l":43,"h":1},{"s":"                (opcode == 7'b1100011) ? 2'b01 :","f":19,"i":1,"l":44,"h":1}],"br":{"s":"assign ALU_op = (opcode == 7'b0110011 || opcode == 7'b0010011) ? 2'b10 :","f":19,"l":43,"i":1,"p":100.00}},{"bs":[{"s":"                (opcode == 7'b1100011) ? 2'b01 :","t":47,"n":1,"f":19,"i":2,"l":44,"h":1},{"s":"                2'b00; // Default to ADD for LW/SW/JAL/JALR","f":19,"i":1,"l":45,"h":1}],"br":{"s":"                (opcode == 7'b1100011) ? 2'b01 :","f":19,"l":44,"i":2,"p":100.00}},{"bs":[{"s":"assign mem_write = (opcode == 7'b0100011)? 1:0;","f":19,"i":1,"l":47,"h":0},{"s":"assign mem_write = (opcode == 7'b0100011)? 1:0;","t":44,"n":1,"f":19,"i":2,"l":47,"h":1}],"br":{"s":"assign mem_write = (opcode == 7'b0100011)? 1:0;","f":19,"l":47,"i":1,"p":50.00}},{"bs":[{"s":"assign ALU_src = (opcode == 7'b0110011 || opcode == 7'b1100011) ? 0 : 1;","f":19,"i":1,"l":48,"h":1},{"s":"assign ALU_src = (opcode == 7'b0110011 || opcode == 7'b1100011) ? 0 : 1;","t":68,"n":1,"f":19,"i":2,"l":48,"h":1}],"br":{"s":"assign ALU_src = (opcode == 7'b0110011 || opcode == 7'b1100011) ? 0 : 1;","f":19,"l":48,"i":1,"p":100.00}}]},"21":{"pr":"/tb_top/dut/processor_inst/PC","t":"inst","br":[{"bs":[{"s":"       if (rst) begin ","f":20,"i":1,"l":20,"h":1},{"s":"       else begin","f":20,"i":1,"l":23,"h":1}],"br":{"s":"       if (rst) begin ","f":20,"l":20,"i":1,"p":100.00}}]},"22":{"pr":"/tb_top/dut/processor_inst/JALR_PC_source_select","t":"inst","br":[{"bs":[{"s":"   assign out = (control) ? inB: inA;","f":21,"i":1,"l":15,"h":1},{"s":"   assign out = (control) ? inB: inA;","t":31,"n":1,"f":21,"i":2,"l":15,"h":1}],"br":{"s":"   assign out = (control) ? inB: inA;","f":21,"l":15,"i":1,"p":100.00}}]},"24":{"pr":"/tb_top/dut/processor_inst/PC_value","t":"inst","br":[{"bs":[{"s":"   assign out = (control) ? inB: inA;","f":21,"i":1,"l":15,"h":1},{"s":"   assign out = (control) ? inB: inA;","t":31,"n":1,"f":21,"i":2,"l":15,"h":1}],"br":{"s":"   assign out = (control) ? inB: inA;","f":21,"l":15,"i":1,"p":100.00}}]},"26":{"pr":"/tb_top/dut/processor_inst/ALU_operand_2","t":"inst","br":[{"bs":[{"s":"   assign out = (control) ? inB: inA;","f":21,"i":1,"l":15,"h":1},{"s":"   assign out = (control) ? inB: inA;","t":31,"n":1,"f":21,"i":2,"l":15,"h":1}],"br":{"s":"   assign out = (control) ? inB: inA;","f":21,"l":15,"i":1,"p":100.00}}]},"27":{"pr":"/tb_top/dut/processor_inst/RF","t":"inst","br":[{"bs":[{"s":"        if (csr_read && (csr_addr == CSR_MHARTID)) begin","f":23,"i":1,"l":38,"h":1},{"s":"        end else begin","f":23,"i":1,"l":40,"h":1}],"br":{"s":"        if (csr_read && (csr_addr == CSR_MHARTID)) begin","f":23,"l":38,"i":1,"p":100.00}},{"bs":[{"s":"        if (rst) begin","f":23,"i":1,"l":50,"h":1},{"s":"        else if (register_write && (rd != 0)) begin","f":23,"i":1,"l":55,"h":1},{"s":"All False","f":23,"i":1,"l":50,"h":1}],"br":{"s":"        if (rst) begin","f":23,"l":50,"i":1,"p":100.00}},{"bs":[{"s":"            if (get_counter) begin ","f":23,"i":1,"l":56,"h":0},{"s":"            else begin  ","f":23,"i":1,"l":59,"h":1}],"br":{"s":"            if (get_counter) begin ","f":23,"l":56,"i":1,"p":50.00}}]},"28":{"pr":"/tb_top/dut/processor_inst/IMM","t":"inst","br":[{"bs":[{"s":"            J:       IMM_value = {{11{j_imm_val[20]}}, j_imm_val};","f":24,"i":1,"l":52,"h":0},{"s":"            B:       IMM_value = btype_imm;","f":24,"i":1,"l":53,"h":1},{"s":"            S:       IMM_value = stype_imm;","f":24,"i":1,"l":54,"h":0},{"s":"            LUI:     IMM_value = utype_imm;","f":24,"i":1,"l":55,"h":1},{"s":"            AUIPC:   IMM_value = utype_imm;","f":24,"i":1,"l":56,"h":1},{"s":"            I_ARITH: begin","f":24,"i":1,"l":58,"h":1},{"s":"            I_LOAD:  IMM_value = itype_imm; // Correct for LW","f":24,"i":1,"l":65,"h":0},{"s":"            JALR:    IMM_value = itype_imm; // Correct for JALR","f":24,"i":1,"l":66,"h":1},{"s":"            default: IMM_value = 32'b0;","f":24,"i":1,"l":67,"h":1}],"br":{"s":"        case (opcode)","f":24,"l":51,"i":1,"p":66.66}},{"bs":[{"s":"                if (instruction[14:12] == 3'b001 || instruction[14:12] == 3'b101) begin // SLLI, SRLI, SRAI","f":24,"i":1,"l":59,"h":1},{"s":"                end else begin","f":24,"i":1,"l":61,"h":1}],"br":{"s":"                if (instruction[14:12] == 3'b001 || instruction[14:12] == 3'b101) begin // SLLI, SRLI, SRAI","f":24,"l":59,"i":1,"p":100.00}}]},"29":{"pr":"/tb_top/dut/processor_inst/ALU_instance","t":"inst","br":[{"bs":[{"s":"        if (rst) begin","f":25,"i":1,"l":21,"h":1},{"s":"        end else begin","f":25,"i":1,"l":23,"h":1}],"br":{"s":"        if (rst) begin","f":25,"l":21,"i":1,"p":100.00}},{"bs":[{"s":"                ADD:  ALU_result = operand_1 + operand_2;","f":25,"i":1,"l":25,"h":1},{"s":"                SUB:  ALU_result = operand_1 - operand_2;","f":25,"i":1,"l":26,"h":1},{"s":"                AND:  ALU_result = operand_1 & operand_2;","f":25,"i":1,"l":27,"h":1},{"s":"                OR:   ALU_result = operand_1 | operand_2;","f":25,"i":1,"l":28,"h":1},{"s":"                SLL:  ALU_result = operand_1 << shift_amount;","f":25,"i":1,"l":29,"h":1},{"s":"                SRL:  ALU_result = operand_1 >> shift_amount;","f":25,"i":1,"l":30,"h":1},{"s":"                XOR:  ALU_result = operand_1 ^ operand_2;","f":25,"i":1,"l":31,"h":1},{"s":"                SRA:  ALU_result = $signed(operand_1) >>> shift_amount;","f":25,"i":1,"l":32,"h":1},{"s":"                SLT:  ALU_result = ($signed(operand_1) < $signed(operand_2)) ? 1 : 0;","f":25,"i":1,"l":33,"h":1},{"s":"                SLTU: ALU_result = (operand_1 < operand_2) ? 1 : 0;","f":25,"i":1,"l":34,"h":1},{"s":"                default: ALU_result = 32'b0;","f":25,"i":1,"l":35,"h":0}],"br":{"s":"            case (opcode)","f":25,"l":24,"i":1,"p":90.90}},{"bs":[{"s":"                SLT:  ALU_result = ($signed(operand_1) < $signed(operand_2)) ? 1 : 0;","t":77,"n":1,"f":25,"i":2,"l":33,"h":1},{"s":"                SLT:  ALU_result = ($signed(operand_1) < $signed(operand_2)) ? 1 : 0;","t":81,"n":1,"f":25,"i":3,"l":33,"h":1}],"br":{"s":"                SLT:  ALU_result = ($signed(operand_1) < $signed(operand_2)) ? 1 : 0;","f":25,"l":33,"i":2,"p":100.00}},{"bs":[{"s":"                SLTU: ALU_result = (operand_1 < operand_2) ? 1 : 0;","t":59,"n":1,"f":25,"i":2,"l":34,"h":1},{"s":"                SLTU: ALU_result = (operand_1 < operand_2) ? 1 : 0;","t":63,"n":1,"f":25,"i":3,"l":34,"h":1}],"br":{"s":"                SLTU: ALU_result = (operand_1 < operand_2) ? 1 : 0;","f":25,"l":34,"i":2,"p":100.00}},{"bs":[{"s":"    assign zero = (ALU_result==0)? 1:0;                     ","f":25,"i":1,"l":40,"h":1},{"s":"    assign zero = (ALU_result==0)? 1:0;                     ","t":36,"n":1,"f":25,"i":2,"l":40,"h":1}],"br":{"s":"    assign zero = (ALU_result==0)? 1:0;                     ","f":25,"l":40,"i":1,"p":100.00}}]},"30":{"pr":"/tb_top/dut/processor_inst/ALU_control","t":"inst","br":[{"bs":[{"s":"            2'b10: begin","f":26,"i":1,"l":29,"h":1},{"s":"            2'b01: begin","f":26,"i":1,"l":53,"h":1},{"s":"            2'b00: begin","f":26,"i":1,"l":57,"h":1},{"s":"            default: ALU_opcode = 4'b0000; // Default to no-op","f":26,"i":1,"l":60,"h":0}],"br":{"s":"        case (ALU_op)","f":26,"l":27,"i":1,"p":75.00}},{"bs":[{"s":"                    3'b000: // ADD or SUB","f":26,"i":1,"l":31,"h":1},{"s":"                    3'b001: // SLL / SLLI","f":26,"i":1,"l":34,"h":1},{"s":"                    3'b010: // SLT / SLTI","f":26,"i":1,"l":36,"h":1},{"s":"                    3'b011: // SLTU / SLTIU","f":26,"i":1,"l":38,"h":1},{"s":"                    3'b100: // XOR / XORI","f":26,"i":1,"l":40,"h":1},{"s":"                    3'b101: // SRL, SRA, SRLI, SRAI","f":26,"i":1,"l":42,"h":1},{"s":"                    3'b110: // OR / ORI","f":26,"i":1,"l":45,"h":1},{"s":"                    3'b111: // AND / ANDI","f":26,"i":1,"l":47,"h":1},{"s":"                    default: ALU_opcode = 4'b0000; // Default to no-op","f":26,"i":1,"l":49,"h":0}],"br":{"s":"                case (funct3)","f":26,"l":30,"i":1,"p":88.88}},{"bs":[{"s":"                        if (funct7 == 7'b0100000) ALU_opcode = ALU_SUB;","f":26,"i":1,"l":32,"h":1},{"s":"                        else ALU_opcode = ALU_ADD;","f":26,"i":1,"l":33,"h":1}],"br":{"s":"                        if (funct7 == 7'b0100000) ALU_opcode = ALU_SUB;","f":26,"l":32,"i":1,"p":100.00}},{"bs":[{"s":"                        if (funct7 == 7'b0100000) ALU_opcode = ALU_SRA; // SRA or SRAI","f":26,"i":1,"l":43,"h":1},{"s":"                        else ALU_opcode = ALU_SRL;                     // SRL or SRLI","f":26,"i":1,"l":44,"h":1}],"br":{"s":"                        if (funct7 == 7'b0100000) ALU_opcode = ALU_SRA; // SRA or SRAI","f":26,"l":43,"i":1,"p":100.00}}]},"32":{"pr":"/tb_top/data_mem","t":"inst","br":[{"bs":[{"s":"    assign read_data = (mem_read) ? memory[address[15:2]]: 0 ;","f":16,"i":1,"l":20,"h":0},{"s":"    assign read_data = (mem_read) ? memory[address[15:2]]: 0 ;","t":53,"n":1,"f":16,"i":2,"l":20,"h":1}],"br":{"s":"    assign read_data = (mem_read) ? memory[address[15:2]]: 0 ;","f":16,"l":20,"i":1,"p":50.00}},{"bs":[{"s":"         if (rst) begin","f":16,"i":1,"l":23,"h":1},{"s":"        else if (mem_write) memory[address[15:2]] <= write_data; ","f":16,"i":1,"l":28,"h":0},{"s":"All False","f":16,"i":1,"l":23,"h":1}],"br":{"s":"         if (rst) begin","f":16,"l":23,"i":1,"p":66.66}}]},"9":{"pr":"work.multiplexor","t":"du","br":[{"bs":[{"s":"   assign out = (control) ? inB: inA;","f":21,"i":1,"l":15,"h":3},{"s":"   assign out = (control) ? inB: inA;","t":31,"n":1,"f":21,"i":2,"l":15,"h":3}],"br":{"s":"   assign out = (control) ? inB: inA;","f":21,"l":15,"i":1,"p":100.00}}]}};
processBranchesData(g_data);